{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pan_c\\\\stuyCS\\\\personalAcc\\\\Congressional-App-Challenge\\\\tenant-aid\\\\frontend\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(true); // NEW: loading state\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true); // start loading\n      try {\n        const res = await fetch(\"WHEREVER-THE-CHAT-IS?\" + new Date().getTime());\n        const data = await res.json();\n        setMessages(data);\n      } catch (err) {\n        console.error(\"Failed to fetch messages:\", err);\n      }\n      setLoading(false); // done loading\n    };\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const newMsg = {\n      id: Date.now(),\n      sender: \"user\",\n      text: input.trim()\n    };\n    setMessages(prev => [...prev, newMsg]);\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : messages.map(({\n        id,\n        sender,\n        text\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: text\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        disabled: loading // disable input while loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: loading,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"T+ZO8N6ISbZD29f6LBEgvqpaPv8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","fetchMessages","res","fetch","Date","getTime","data","json","err","console","error","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","newMsg","id","now","sender","text","prev","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","type","placeholder","value","onChange","target","onKeyDown","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pan_c/stuyCS/personalAcc/Congressional-App-Challenge/tenant-aid/frontend/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../css/Chat.css\";\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(true); // NEW: loading state\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setLoading(true); // start loading\r\n      try {\r\n        const res = await fetch(\"WHEREVER-THE-CHAT-IS?\" + new Date().getTime());\r\n        const data = await res.json();\r\n        setMessages(data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch messages:\", err);\r\n      }\r\n      setLoading(false); // done loading\r\n    };\r\n\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMsg = {\r\n      id: Date.now(),\r\n      sender: \"user\",\r\n      text: input.trim(),\r\n    };\r\n\r\n    setMessages((prev) => [...prev, newMsg]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-window\">\r\n        {loading ? (\r\n          <div className=\"spinner\" />\r\n        ) : (\r\n          messages.map(({ id, sender, text }) => (\r\n            <div\r\n              key={id}\r\n              className={`message ${sender === \"user\" ? \"user\" : \"bot\"}`}\r\n            >\r\n              {text}\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-area\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          disabled={loading} // disable input while loading\r\n        />\r\n        <button onClick={handleSend} disabled={loading}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}